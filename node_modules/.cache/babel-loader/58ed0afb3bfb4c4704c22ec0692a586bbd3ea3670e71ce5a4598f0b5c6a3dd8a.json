{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"block\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Show me a joke\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0,\n  class: \"block\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = $event => $options.fetchData())\n  }, \"Show a joke\"), $data.joke ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _toDisplayString($data.joke), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","onClick","_cache","$event","$options","fetchData","$data","joke","_hoisted_3","_toDisplayString"],"sources":["C:\\Users\\maria\\dev\\Programmingjokes vol3\\programming-jokes\\src\\components\\JokesForm.vue"],"sourcesContent":["<template>\r\n    <div class=\"block\">\r\n        <h2>Show me a joke</h2>\r\n        <button @click=\"fetchData()\">Show a joke</button>\r\n        <div class=\"block\" v-if=\"joke\">{{ joke }}</div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            joke: \"\",\r\n        };\r\n    },\r\n    methods: {\r\n        async fetchData() {\r\n            fetch('https://jokes-a4706-default-rtdb.firebaseio.com/newjokes.json')\r\n                .then((response) => {\r\n                    if (response.ok) {\r\n                        return response.json();\r\n                    }\r\n                })\r\n                .then((data) => {\r\n                    const jokeIds = Object.keys(data);\r\n                    if (jokeIds.length > 0) {\r\n                        const randomId = jokeIds[Math.floor(Math.random() * jokeIds.length)];\r\n                        this.joke = data[randomId].joke;\r\n                    } else {\r\n                        this.joke = \"No jokes available.\";\r\n                    }\r\n\r\n                });\r\n        },\r\n    },\r\n};\r\n</script>"],"mappings":";;EACSA,KAAK,EAAC;AAAO;gCACdC,mBAAA,CAAuB,YAAnB,gBAAc;;;EAEbD,KAAK,EAAC;;;uBAHfE,mBAAA,CAIM,OAJNC,UAIM,GAHFC,UAAuB,EACvBH,mBAAA,CAAiD;IAAxCI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,SAAS;KAAI,aAAW,GACfC,KAAA,CAAAC,IAAI,I,cAA7BT,mBAAA,CAA+C,OAA/CU,UAA+C,EAAAC,gBAAA,CAAbH,KAAA,CAAAC,IAAI,oB"},"metadata":{},"sourceType":"module","externalDependencies":[]}